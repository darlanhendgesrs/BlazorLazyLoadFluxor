@using System.Reflection
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Microsoft.Extensions.DependencyInjection.Extensions
@using Microsoft.Extensions.Logging
@using Shared.LazyLoad

@inject ILogger<App> Logger
@inject ICustomServiceProvider CustomProvider

<Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="@LazyLoadModule.LoadedAssemblies" OnNavigateAsync="@OnNavigateAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    protected ILazyLoadModules LazyLoadModule { get; set; } = null!;

    protected override void OnInitialized()
    {
        LazyLoadModule = CustomProvider.CurrentProvider.GetRequiredService<ILazyLoadModules>();
    }

    private async Task OnNavigateAsync(NavigationContext args)
    {
        if (!string.IsNullOrWhiteSpace(args.Path))
            await LazyLoadModule.LoadModuleAsync(args.Path);
    }
}